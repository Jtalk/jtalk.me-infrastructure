name: Trigger version update for a service

on:
  workflow_dispatch:
    inputs:
      name:
        description: Name of the service to update version for
        required: true
      version:
        description: The versions string to deploy the service with. Usually a commit SHA
        required: true
      callback:
        description: The workflow name to trigger upon successful completion
        required: false

env:
  IGNORE: true

jobs:
  update-version:
    name: Update the relevant version in the repository
    runs-on: ubuntu-latest
    concurrency: app-version-${{ github.event.inputs.name }}
    env:
      VERSIONS_FILE_PATH: ./jtalk-me/versions.auto.tfvars
    outputs:
      sha: ${{ steps.store.outputs.sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: refs/heads/master
      - name: Update the file
        run: |
          sed -E -i '/^${{ github.event.inputs.name }}_version /s/"[A-Za-z0-9]+"/"${{ github.event.inputs.version }}"/' ${{ env.VERSIONS_FILE_PATH }}
      - name: Commit the updated file back
        run: |
          git config --global user.email "github-bot@jtalk.me"
          git config --global user.name "Github Actions Bot"
          git add ${{ env.VERSIONS_FILE_PATH }}
          git commit --allow-empty -m '[Workflow] Updating ${{ github.event.inputs.name }} to ${{ github.event.inputs.version }}'
          git push
      - name: Store commit hash
        id: store
        run: |
          SHA=$(git rev-parse HEAD)
          echo "::set-output name=sha::$SHA"

  wait-deploy:
    name: Wait for the deploy pipeline to complete
    runs-on: ubuntu-latest
    needs:
      - update-version
    env:
      TARGET_SHA: ${{ needs["update-version"].output.sha }}
    steps:
      - name: Show commit SHA
        run: |
          echo "Waiting for pipeline on to complete for ${{ env.TARGET_SHA }}"
      - name: Waiting for the deployment pipeline to complete
        uses: uplift-ltd/wait-for-workflow-run-action@v1
        with:
          sha: ${{ env.TARGET_SHA }}
          cancelWorkflow: true
