name: Deploy the infrastructure

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/deploy.yaml"
      - "jtalk-me/**"
  workflow_dispatch:

jobs:
  terraform-apply:
    name: Apply the new infrastructure
    runs-on: ubuntu-latest
    concurrency: terraform-apply
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          role-to-assume: terraform
          role-duration-seconds: 1800

      - name: Terraform format
        working-directory: jtalk-me
        run: terraform fmt -check -no-color
        continue-on-error: true

      - name: Terraform deploy
        working-directory: jtalk-me
        run: |
          terraform init -no-color
          terraform validate -no-color
          terraform apply \
            -auto-approve \
            -input=false \
            -var 'do_token=${{ secrets.DO_TOKEN }}' \
            -var 'cloudflare_account_id=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}' \
            -var 'cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}' \
            -var 'atlas_key=${{ secrets.ATLAS_KEY }}' \
            -var 'atlas_key_secret=${{ secrets.ATLAS_KEY_SECRET }}' \
            -var 'acme_email=${{ secrets.ACME_EMAIL }}' \
            -var 'acme_key_base64=${{ secrets.ACME_KEY_BASE64 }}' \
            -no-color
